@model IEnumerable<CVGS.Models.ReviewViewModel>
@{
    ViewBag.Title = "Add Review";
}
<h2>Add Review</h2>


@if (ViewBag.message == "Review is in progress you can't edit now.")
{
    <p style="color:red">@ViewBag.message</p>
}
else
{
    if (ViewBag.message == "Edit your previous review.")
    {
        <p style="color:red">@ViewBag.message</p>
        using (Html.BeginForm("AddReview", "Review", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })




                @for (int item = 0; item < Model.Count(); item++)
                {

                    @Html.HiddenFor(model => @Model.ToList()[item].GameID)
                    //new { @Value = "defaultUserName", name = "Id" })
                    <div class="form-group">

                        @Html.LabelFor(model => @Model.ToList()[item].Review1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => @Model.ToList()[item].Review1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => @Model.ToList()[item].Review1, "", new { @class = "text-danger" })
                        </div>
                        @*<input name="@Model.ToList()[item].Review1" />*@
                    </div>

                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        @*<input hidden type="text" value="@Model.GameID" name="gID" style="width:140px" />*@
                        <input type="submit" value="Post Review" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    }
    else
    {
        using (Html.BeginForm("AddReview", "Review", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })




                @for (int item = 0; item < 1; item++)
                {

                    @Html.HiddenFor(model => @Model.ToList()[item].GameID)
                    <div class="form-group">

                        @Html.LabelFor(model => @Model.ToList()[item].Review1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => @Model.ToList()[item].Review1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => @Model.ToList()[item].Review1, "", new { @class = "text-danger" })
                        </div>
                  
                    </div>

                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        @*<input hidden type="text" value="@Model.GameID" name="gID" style="width:140px" />*@
                        <input type="submit" value="Post Review" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    }

}


<div>
    <a href='/Member/Index'>Back</a>
    @*@Html.ActionLink("Back", "Index")*@
</div>