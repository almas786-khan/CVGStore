@model  CVGS.Models.ProfileViewModel

@{
    ViewBag.Title = "Profile";
}

<h2>Profile</h2>
@if (ViewBag.result != null)
{
    <br />
    <div class="form-group">
        <p style="color:red">@ViewBag.result</p>
    </div>

    <div>
        <p>
            @Html.ActionLink("Back", "Index", "Profile")
        </p>
    </div>
}
else
{
    using (Html.BeginForm("Create", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">


            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })



            @Html.HiddenFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })

            <div class="form-group">
                @Html.LabelFor(model => model.UserFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserFirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserLastName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">

                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(Model => Model.Gender, "Male")Male
                    @Html.RadioButtonFor(Model => Model.Gender, "Female")Female
                    @Html.RadioButtonFor(Model => Model.Gender, "Others")Others

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label class="checkbox-inline">
                        @Html.CheckBox("IsEmail")
                    </label>

                    @Html.ValidationMessageFor(model => model.IsEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>


            <br />
        </div>
    }


}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>

}