@model CVGS.Models.AddressViewModel

@{
    ViewBag.Title = "ModifyAddress";
}

<h2>Modify Address</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Users.UserID)
    <div class="form-horizontal">
        <h3>Mailing Information</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.MailingAddress.UnitAndStreet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailingAddress.UnitAndStreet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MailingAddress.UnitAndStreet, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MailingAddress.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailingAddress.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MailingAddress.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MailingAddress.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.MailingAddress.ProvinceID,
                    new SelectList(Model.Provinces, "ProvinceID", "Province1", Model.MailingAddress.ProvinceID),
                        "Select Province")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MailingAddress.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.MailingAddress.CountryID,
                    new SelectList(Model.Countries, "CountryID", "Country1", Model.MailingAddress.CountryID),
                        "Select Country")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MailingAddress.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailingAddress.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MailingAddress.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="form-group">
         
            @Html.CheckBox("ShippingAddress.Same_Address", Model.ShippingAddress?.IsSame ?? false, new { onclick = "javascript:$('#shipping').toggle();" })
            @Html.LabelFor(model => model.ShippingAddress.IsSame, htmlAttributes: new { @class = "control-label col-md-2" })
            <label>Mailing and shipping address are the same!</label>
        </div>
    </div>
    <div class="form-horizontal" id="shipping"  style="@(Model.ShippingAddress.IsSame ?? false ? "display:none" : "display:block")">
        <h3>Shipping Information</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingAddress.UnitAndStreet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShippingAddress.UnitAndStreet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShippingAddress.UnitAndStreet, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingAddress.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShippingAddress.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShippingAddress.City, "", new { @class = "text-danger" })
            </div>
        </div><div class="form-group">
            @Html.LabelFor(model => model.ShippingAddress.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ShippingAddress.ProvinceID,
                    new SelectList(Model.Provinces, "ProvinceID", "Province1", Model.ShippingAddress.ProvinceID),
                        "Select Province")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingAddress.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ShippingAddress.CountryID,
                    new SelectList(Model.Countries, "CountryID", "Country1", Model.ShippingAddress.CountryID),
                        "Select Country")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingAddress.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShippingAddress.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShippingAddress.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "../Member/Index")
</div>

